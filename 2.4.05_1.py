# Импортируем модуль time
import time

# Определяем декоратор decor_1, который принимает функцию
def decor_1(func):
    # Инициализируем словарь cache
    cache = {}

    # Определяем внутреннюю функцию wrapper, которая принимает любое количество аргументов
    def wrapper(*args):
        # Проверяем, есть ли аргументы в словаре cache
        if args in cache:
            # Если есть, возвращаем результат из словаря cache
            return cache[args]
        # Если нет, вызываем функцию func с переданными аргументами и сохраняем результат в переменной result
        result = func(*args)
        # Добавляем результат в словарь cache
        cache[args] = result
        # Возвращаем результат
        return result

    # Возвращаем внутреннюю функцию wrapper
    return wrapper


# Определяем декоратор decor_2, который принимает функцию
def decor_2(func):
    # Определяем внутреннюю функцию wrapper, которая принимает любое количество аргументов
    def wrapper(*args):
        # Запоминаем текущее время
        start_time = time.time()
        # Вызываем функцию func с переданными аргументами и сохраняем результат в переменной result
        result = func(*args)
        # Вычисляем время работы функции
        time_taken = time.time() - start_time
        # Возвращаем кортеж, где первое число - результат функции, второе - время работы функции
        return result, time_taken

    # Возвращаем внутреннюю функцию wrapper
    return wrapper


# Определяем функцию func, которая принимает целое число
def func(n: int) -> int:
    # Инициализируем переменную summa
    summa = 0

    # Проходим по всем числам в диапазоне от 1 до n
    for i in range(1, n):
        # Добавляем куб каждого числа к переменной summa
        summa += i ** 3

    # Возвращаем сумму кубов
    return summa


# Применяем декораторы decor_2 и decor_1 к функции func и сохраняем результат в переменной x
x = decor_2(decor_1(func))

# Вызываем функцию x, передавая ей число 9999999, и выводим результат
print(x(9999999))

# Вызываем функцию x, передавая ей число 9999999, и выводим результат
print(x(9999999))