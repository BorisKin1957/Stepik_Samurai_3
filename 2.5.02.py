'''В HTML тег - это элемент разметки. Например текст между начальным тегом <small>
и конечным тегом </small>, отображается с меньшим размером, чем основной текст.
А текст между тегами <big> и </big> отображается с большим размером.

Необходимо создать функцию func, которая принимает строку и тег(все аргументы str),
и соответственно возвращающую данную строку обрамленную тегом. Далее нужно создать
декоратор decor с параметром n, где n - количество повторений данной строки.
Все дублируемые строки формируются в столбик. Пример:

x = decor(3)(func)
print(x('У меня тегофобия!', 'h1'))
-----------------------------------
<h1>У меня тегофобия!</h1>
<h1>У меня тегофобия!</h1>
<h1>У меня тегофобия!</h1>'''


def decor(count: int):
    def wrapper(func):
        def inner(string: str, tag: str) -> str:
            result = ''
            for _ in range(count):
                result += func(string, tag) + '\n'
            return result.strip()

        return inner

    return wrapper


def func(string: str, tag: str) -> str:
    return f'<{tag}>{string}</{tag}>'


x = decor(3)(func)
print(x('У меня тегофобия!', 'h1'))

x = decor(5)(func)
print(x('а у вас молоко убежало прихватив сейф', 'big'))