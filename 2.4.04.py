# Определяем декоратор decor, который принимает функцию
def decor(func):
    # Определяем внутреннюю функцию wrapper, которая принимает любое количество
    # аргументов и ключевых аргументов
    def wrapper(*args, **kwargs):
        # Проверяем, есть ли аргументы
        if args:
            # Если есть, вызываем функцию func с переданными аргументами и
            # возвращаем результат
            return func(*args)
        # Если нет, возвращаем строку 'Функция должна принять хотя бы 1 аргумент'
        return 'Функция должна принять хотя бы 1 аргумент'

    # Возвращаем внутреннюю функцию wrapper
    return wrapper


# Определяем функцию func, которая принимает любое количество аргументов
def func(*args):
    # Преобразуем аргументы в список и возвращаем результат
    return list(args)


# Применяем декоратор decor к функции func и сохраняем результат в переменной x
x = decor(func)

# Вызываем функцию x, передавая ей числа 1, 2 и 3, и выводим результат
print(x(1, 2, 3))

# Применяем декоратор decor к функции func и сохраняем результат в переменной x
x = decor(func)

# Вызываем функцию x без аргументов и выводим результат
print(x())



