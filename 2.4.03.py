# Определяем декоратор decor, который принимает функцию
def decor(func):
    # Определяем внутреннюю функцию wrapper, которая принимает любое количество
    # аргументов и ключевых аргументов
    def wrapper(*args, **kwargs):
        # Инициализируем переменные i и result
        i, result = 1, ''
        # Вызываем функцию func с переданными аргументами и сохраняем результат
        # в списке words
        words = func(*args, **kwargs)

        # Проходим по всем словам в переменной words
        for word in words:
            # Добавляем к переменной result строку, которая состоит из номера
            # слова и самого слова
            result += f'{i}. {word}\n'
            # Увеличиваем переменную i на 1
            i += 1

        # Возвращаем результат
        return result

    # Возвращаем внутреннюю функцию wrapper
    return wrapper


# Определяем функцию func, которая принимает строку
def func(string):
    # Разделяем строку на слова и возвращаем список слов
    return string.split()


# Применяем декоратор decor к функции func и сохраняем результат в переменной x
x = decor(func)

# Вызываем функцию x, передавая ей строку "Поскользнулся упал закрытый_перелом потерял_сознание очнулся—гипс!", и выводим результат
print(x("Поскользнулся упал закрытый_перелом потерял_сознание очнулся—гипс!"))
